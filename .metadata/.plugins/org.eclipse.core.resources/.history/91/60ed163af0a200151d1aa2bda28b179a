package com.user.controller;
import user.com.service.UserService;
import static spark.Spark.*;
import spark.Request;
import spark.Response;
import spark.Route;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.gson.Gson;
import com.user.model.User;
import com.user.util.*;
public class UserController {

	public UserController(final UserService userService) {
		
		get("/users", new Route() {
		      @Override
		      public Object handle(Request request, Response response) throws Exception {
		        // process request  
		        return ToJson.dataToJson(userService.fetchAll());
		      }
		    });
	
		
		delete("/delete/:id", new Route(){

			@Override
			public Object handle(Request request, Response response) throws Exception {
				String id =request.params(":id");
				int id1 = Integer.parseInt(id);
				
				
				return null;
			}
		                  
			});
		
		
		put("/put/:id", new Route(){

			@Override
			public Object handle(Request request, Response response) throws Exception {
				
				 String id = request.params(":id");
				 int id1 = Integer.parseInt(id);
				 
				 // converting JSON to JAVA object
				 User user = new ObjectMapper().readValue(request.body(), User.class);
				 
				 return ToJson.dataToJson(userService.update(id1, user));
			}
			
		});
		
		
	   post("/posts", new Route() {
		   
		   @Override
		   public Object handle(Request request, Response response) throws Exception {
		   try {
                // converting JSON to JAVA object            
                User user = new ObjectMapper().readValue(request.body(), User.class);
                userService.create(user);
                
            } catch (JsonParseException jpe) {
                response.status(500);
            	return " fail";
            }
            response.status(200);
			return "Pushed";
		   }
        });
        	
	}

}
